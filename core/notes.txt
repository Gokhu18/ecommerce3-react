TODO: Review auth.js

API workflow
1. core.models --> core.api.serializers
2. core.views --> core.api.views --> core.api.urls  --> URLconstants.js
    Depending on specifics of app:
    2a. store.actions.{file}.js --> store.reducers.{file}.js --> Layout.js
3. Components.js --> routes.js

    - convert core.models into core.api.serializers
    - import necessary modules from core.views into core.api.views
    - Copy core.views functions into core.api.views
    - Reconfigure functions in core.api.views to their API equivalents
    - Add core.api.views functions to core.api.urls
    - add names of core.api.urls to URLconstants.js
    - import URLconstants into appropriate Component.js pages
    - add path/exact-path for each Component in routes.js

Consider allowing users to save multiple cards and choose a default
    - Payment model: saved_cards 
    - Stripe: already allows to create multiple sources
    - Form and HTML

Saved new default address, figure out how to get last value
    - CheckoutView
    - Then figure out how to delete previous defaults when you make a new one

NAVBAR
    - Remove badge
        - !user.is_authenticated
        - Cart is empty

ACCOUNT_EMAIL_VERIFICATION (settings.py:30)
    - Figure out a way for apps to bypass verification upon signing up